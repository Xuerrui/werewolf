<import name="my-avatar" src="apex-ui/components/avatar/index"></import>
<template>
  <div class="page-container">
    
    <div class="roominfo" style="height:20%;">
        <text style="margin-left: 10px;">房间号:{{rname}}</text>
        <text style="margin-left: 10px;">你的名字是:{{hname}}</text>
        <text style="margin-left: 10px;">您的身份是:{{htype}} </text>
    </div>

    <div class="opertion" style="height:30%;">
      <div >
        <div>
          <a class="btn" style="text-align:center;" onclick="refresh()">开始行动</a>
        </div>
      </div>
    </div>

    <div class = "process" style="height:50%;">
      <list class="page-container" onscrollbottom="refresh">
      
      <!-- 商品列表 -->
        <list-item
          type="product"
          class="item-product"
          for="talk"
        >
          <div class="product-text-wrap">
            <text class="product-text-name" if="{{$item.hname != ''&&$item.hname != null}}">{{$item.hname+'说:'}}</text>
            <text class="product-text-name">{{ $item.talk }}</text>
          </div>
        </list-item>

        <list-item type="loadStatus" class="load-status">
          <progress type="circular" show="{{hasMoreData}}"></progress>
          <text show="{{hasMoreData}}">加载更多</text>
          <text show="{{!hasMoreData}}">没有更多了~</text>
        </list-item>
      </list>
    </div>
  </div>
</template>


<script>
import router from '@system.router'
import fetch from '@system.fetch'
// 内存中存储的列表数据
export default {
  public: {
    rname: '509',
    hname: 'xu',
    htype: '狼人',
    hasMoreData: 1,
    url: 'http://192.168.3.13:8181',
    talk: [
          {
          "id": 1,
          "rname": "509",
          "hname": "",
          "talk": "天黑请闭眼"
          },
          {
          "id": 2,
          "rname": "509",
          "hname": "1",
          "talk": "hello"
          },
          {
          "id": 2,
          "rname": "509",
          "hname": "1",
          "talk": "hello"
          },
          
          ],
  },

  
  onInit() {
    //获得讨论列表

      fetch.fetch({
        url: this.url+'/talk/findByName/'+this.rname,
        method: 'get',
        responseType: 'text',
      })
      .then(res => {
        console.log(res)
        this.talk = JSON.parse(res.data.data)
      })
      .catch(success => {
      })
      .catch(error => {
        console.log(that.data)
      })
      //获得自己的身份
      fetch.fetch({
        url: this.url+'/room/findByRH/'+this.rname+'/'+this.hname,
        method: 'get',
        responseType: 'json',
      })
      .then(res => {
        console.log(res)
        this.htype = res.data.data.htype
      })
      .catch(error => {
        console.log(that.data)
      })
  },

  // refresh() {
  //       fetch.fetch({
  //           url: this.url+'/talk/findByName/'+this.rname,
  //           method: 'get',
  //           responseType: 'text',
  //         })
  //         .then(res => {
  //           const result = res
  //           this.talk = JSON.parse(res.data.data)
  //           console.log(this.talk)
  //         })
  //         .catch(error => {
  //           console.log(this.data)
  //         })
          
  // },
  refresh() {
    let that = this
    setTimeout(function() {
        fetch.fetch({
            url: that.url+'/talk/findByName/'+that.rname,
            method: 'get',
            responseType: 'text',
          })
          .then(res => {
            const result = res
            that.hasMoreData = 0
            that.talk = JSON.parse(res.data.data)
            console.log(that.talk)
          })
          .catch(error => {
            console.log(that.data)
          })
          
      }, 1000)
      that.hasMoreData = 1
  },
}
</script>

<style lang="less">
@import '../../assets/styles/style.less';

.btn {
    width: 200px;
    height: 86px;
    
    margin: 20px;
    margin-top: 75px;
    border-radius: 43px;
    background-color: #4286f5;
    font-size: 30px;
    text-align: center;
    color: #ffffff;
  }
.page-container {
  align-items: center;
  width: 100%;
  height: 100%;
  background-color: #f0f0eb;
  flex-direction: column;
  .item-product {
    background-color: #ffffff;
    flex-direction: column;
    width: 100%;
    border-radius: 16px;
    margin-top: 10px;
    margin-bottom: 10px;
    margin-left: 20px;
    margin-right: 20px;
    .product-text-wrap {
      width: 100%;
      justify-content: center;
      padding: 16px;
      background-color: #ffffff;
      flex-direction: column;
      border-bottom-left-radius: 16px;
      border-bottom-right-radius: 16px;
      .product-text-name {
        color: #000000;
        font-size: 32px;
      }
      .product-text-price {
        margin-top: 8px;
        color: #ec4848;
        font-size: 30px;
      }
    }
  }
  .load-status {
    width: 100%;
    flex-direction: row;
    justify-content: center;
  }
}
</style>
